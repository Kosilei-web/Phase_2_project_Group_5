{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyMA4GVogU2eRrPfjK4jnkAd",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Kosilei-web/Phase_2_project_Group_5/blob/main/Group%205%20Assignment%20Feb%202025\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "6Wtxco0bLcMV"
      },
      "outputs": [],
      "source": [
        "#importation of libraries\n",
        "import pandas as pd\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "from sklearn.linear_model import LinearRegression, Ridge, Lasso\n",
        "from sklearn.ensemble import RandomForestRegressor\n",
        "from sklearn.svm import SVR\n",
        "from sklearn.model_selection import train_test_split, cross_val_score, KFold\n",
        "from sklearn.preprocessing import StandardScaler, MinMaxScaler, PolynomialFeatures, LabelEncoder, OneHotEncoder\n",
        "from sklearn.preprocessing import LabelEncoder"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#loading the dataset\n",
        "df = pd.read_csv('Student_Performance.csv')"
      ],
      "metadata": {
        "id": "CKfR8xAALsZY"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "eWz1zp8PLuhk",
        "outputId": "1cb9db84-5476-4faa-eac4-e7bc35af5747"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   Hours Studied  Previous Scores Extracurricular Activities  Sleep Hours  \\\n",
              "0              7               99                        Yes            9   \n",
              "1              4               82                         No            4   \n",
              "2              8               51                        Yes            7   \n",
              "3              5               52                        Yes            5   \n",
              "4              7               75                         No            8   \n",
              "\n",
              "   Sample Question Papers Practiced  Performance Index  \n",
              "0                                 1               91.0  \n",
              "1                                 2               65.0  \n",
              "2                                 2               45.0  \n",
              "3                                 2               36.0  \n",
              "4                                 5               66.0  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-b9b56aa0-0c62-4d8f-847d-0cf52a04eda3\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Hours Studied</th>\n",
              "      <th>Previous Scores</th>\n",
              "      <th>Extracurricular Activities</th>\n",
              "      <th>Sleep Hours</th>\n",
              "      <th>Sample Question Papers Practiced</th>\n",
              "      <th>Performance Index</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>7</td>\n",
              "      <td>99</td>\n",
              "      <td>Yes</td>\n",
              "      <td>9</td>\n",
              "      <td>1</td>\n",
              "      <td>91.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>4</td>\n",
              "      <td>82</td>\n",
              "      <td>No</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>65.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>8</td>\n",
              "      <td>51</td>\n",
              "      <td>Yes</td>\n",
              "      <td>7</td>\n",
              "      <td>2</td>\n",
              "      <td>45.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>5</td>\n",
              "      <td>52</td>\n",
              "      <td>Yes</td>\n",
              "      <td>5</td>\n",
              "      <td>2</td>\n",
              "      <td>36.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>7</td>\n",
              "      <td>75</td>\n",
              "      <td>No</td>\n",
              "      <td>8</td>\n",
              "      <td>5</td>\n",
              "      <td>66.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b9b56aa0-0c62-4d8f-847d-0cf52a04eda3')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-b9b56aa0-0c62-4d8f-847d-0cf52a04eda3 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-b9b56aa0-0c62-4d8f-847d-0cf52a04eda3');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-afd6b36d-001d-4ccb-9ffa-df3a8b80a3dd\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-afd6b36d-001d-4ccb-9ffa-df3a8b80a3dd')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-afd6b36d-001d-4ccb-9ffa-df3a8b80a3dd button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df",
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 10000,\n  \"fields\": [\n    {\n      \"column\": \"Hours Studied\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2,\n        \"min\": 1,\n        \"max\": 9,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          1,\n          4,\n          6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Previous Scores\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 17,\n        \"min\": 40,\n        \"max\": 99,\n        \"num_unique_values\": 60,\n        \"samples\": [\n          99,\n          78,\n          93\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Extracurricular Activities\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"No\",\n          \"Yes\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Sleep Hours\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 4,\n        \"max\": 9,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          9,\n          4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Sample Question Papers Practiced\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2,\n        \"min\": 0,\n        \"max\": 9,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          9,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Performance Index\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 19.212557799463323,\n        \"min\": 10.0,\n        \"max\": 100.0,\n        \"num_unique_values\": 91,\n        \"samples\": [\n          41.0,\n          49.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 7
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.tail()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "ISJsG7N7L15F",
        "outputId": "dcaaa127-b73e-47d4-c0ad-dca4b3d41338"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      Hours Studied  Previous Scores Extracurricular Activities  Sleep Hours  \\\n",
              "9995              1               49                        Yes            4   \n",
              "9996              7               64                        Yes            8   \n",
              "9997              6               83                        Yes            8   \n",
              "9998              9               97                        Yes            7   \n",
              "9999              7               74                         No            8   \n",
              "\n",
              "      Sample Question Papers Practiced  Performance Index  \n",
              "9995                                 2               23.0  \n",
              "9996                                 5               58.0  \n",
              "9997                                 5               74.0  \n",
              "9998                                 0               95.0  \n",
              "9999                                 1               64.0  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-8f78efd9-88f6-4853-b4e8-166b04f66a23\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Hours Studied</th>\n",
              "      <th>Previous Scores</th>\n",
              "      <th>Extracurricular Activities</th>\n",
              "      <th>Sleep Hours</th>\n",
              "      <th>Sample Question Papers Practiced</th>\n",
              "      <th>Performance Index</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>9995</th>\n",
              "      <td>1</td>\n",
              "      <td>49</td>\n",
              "      <td>Yes</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>23.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9996</th>\n",
              "      <td>7</td>\n",
              "      <td>64</td>\n",
              "      <td>Yes</td>\n",
              "      <td>8</td>\n",
              "      <td>5</td>\n",
              "      <td>58.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9997</th>\n",
              "      <td>6</td>\n",
              "      <td>83</td>\n",
              "      <td>Yes</td>\n",
              "      <td>8</td>\n",
              "      <td>5</td>\n",
              "      <td>74.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9998</th>\n",
              "      <td>9</td>\n",
              "      <td>97</td>\n",
              "      <td>Yes</td>\n",
              "      <td>7</td>\n",
              "      <td>0</td>\n",
              "      <td>95.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9999</th>\n",
              "      <td>7</td>\n",
              "      <td>74</td>\n",
              "      <td>No</td>\n",
              "      <td>8</td>\n",
              "      <td>1</td>\n",
              "      <td>64.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8f78efd9-88f6-4853-b4e8-166b04f66a23')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-8f78efd9-88f6-4853-b4e8-166b04f66a23 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-8f78efd9-88f6-4853-b4e8-166b04f66a23');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-fcb1f92e-b672-481a-8e7d-f6ae490a23a5\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-fcb1f92e-b672-481a-8e7d-f6ae490a23a5')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-fcb1f92e-b672-481a-8e7d-f6ae490a23a5 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"Hours Studied\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3,\n        \"min\": 1,\n        \"max\": 9,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          7,\n          9,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Previous Scores\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 18,\n        \"min\": 49,\n        \"max\": 97,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          64,\n          74,\n          83\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Extracurricular Activities\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"No\",\n          \"Yes\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Sleep Hours\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 4,\n        \"max\": 8,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          4,\n          8\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Sample Question Papers Practiced\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2,\n        \"min\": 0,\n        \"max\": 5,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          5,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Performance Index\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 26.319194516550084,\n        \"min\": 23.0,\n        \"max\": 95.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          58.0,\n          64.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 8
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ts6FTuTfL_pP",
        "outputId": "201223d0-636b-4429-df3a-b5dfdfd2ce26"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 10000 entries, 0 to 9999\n",
            "Data columns (total 6 columns):\n",
            " #   Column                            Non-Null Count  Dtype  \n",
            "---  ------                            --------------  -----  \n",
            " 0   Hours Studied                     10000 non-null  int64  \n",
            " 1   Previous Scores                   10000 non-null  int64  \n",
            " 2   Extracurricular Activities        10000 non-null  object \n",
            " 3   Sleep Hours                       10000 non-null  int64  \n",
            " 4   Sample Question Papers Practiced  10000 non-null  int64  \n",
            " 5   Performance Index                 10000 non-null  float64\n",
            "dtypes: float64(1), int64(4), object(1)\n",
            "memory usage: 468.9+ KB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "DwXKik-6MQaR",
        "outputId": "39980de1-754c-4442-c5f8-a7879fcee86a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(10000, 6)"
            ]
          },
          "metadata": {},
          "execution_count": 11
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "RlzIu4A_MVik"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "# **Difference between linear and non-linear relationships**\n",
        "\n",
        "**Linear r/ship**\n",
        "\n",
        "Change in the independent variable results in a proportional change in the dependent variable.\n",
        "\n",
        "Always produces a straight line\n",
        "\n",
        "R/ship among the variables remain constant\n",
        "\n",
        "An example is Salary and No of years worked\n",
        "\n",
        "**None_Linear r/ship**\n",
        "\n",
        " Refers to rate of change does not follow a staight line pattern(is curved)\n",
        "\n",
        "An example is population growth over time, they are exponential in nature"
      ],
      "metadata": {
        "id": "W8OJ2xrLOIwD"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Data Preprocessing and Scaling\n"
      ],
      "metadata": {
        "id": "0JtHlVwBQByT"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Outlier detection and Handling missing values**"
      ],
      "metadata": {
        "id": "bc657GxXQa4C"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#Handling missing values\n",
        "df.isna().sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 272
        },
        "id": "j2_8Kkg-QXW6",
        "outputId": "016c2102-060a-4908-d293-bd825026b6ce"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Hours Studied                       0\n",
              "Previous Scores                     0\n",
              "Extracurricular Activities          0\n",
              "Sleep Hours                         0\n",
              "Sample Question Papers Practiced    0\n",
              "Performance Index                   0\n",
              "dtype: int64"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>Hours Studied</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Previous Scores</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Extracurricular Activities</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Sleep Hours</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Sample Question Papers Practiced</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Performance Index</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div><br><label><b>dtype:</b> int64</label>"
            ]
          },
          "metadata": {},
          "execution_count": 12
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.columns"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "1ooJZ-TCTzrx",
        "outputId": "aafe17cd-dcdf-46ff-b2df-1a215380a786"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Index(['Hours Studied', 'Previous Scores', 'Extracurricular Activities',\n",
              "       'Sleep Hours', 'Sample Question Papers Practiced', 'Performance Index'],\n",
              "      dtype='object')"
            ]
          },
          "metadata": {},
          "execution_count": 19
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "for col in df.columns:\n",
        "    plt.figure(figsize=(8, 6))\n",
        "    sns.boxplot(data=df, x=col)\n",
        "    plt.title(f\"Boxplot of {col}\", fontsize=14)\n",
        "    plt.xlabel(col, fontsize=12)\n",
        "    plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "_78qSjhrQxJZ",
        "outputId": "4835c01e-beb8-4f1e-8c4f-af9c124833ed"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x600 with 1 Axes>"
            ],
            "image/png": "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+WYlJydr/vz5mjVrllJTU/XUU0/5t8/KytLKlSv1zDPP+J9Vuvjii5Wdna3HHntMgwcP1osvvhgwniZNmmju3Llq2bKlOnTooO3bt+utt97SoUOHNG7cOIWHh5/wfFJTUzVq1CgNGjRITZo00S233KLIyEhNmzZNK1eu1PXXX+//VX3SkQ/DtGzZUnPmzFGPHj1Ut25dBQUFqUePHsV+uKVQmzZt1L9/f7344otq1KiRunbtKjPTv//9b23cuFEDBgwIiOnTLTY2VpMnT9bNN9+stLQ0XXXVVWrQoIEKCgq0du1azZ49W5dccknAB4hKKzo6Wq+88ooyMjLUqlUr3XrrrYqNjdXnn3+uxYsX66KLLtLgwYNPwVn9dv3791f//v3VtGlT3XTTTTp06JCmT58uM1NaWpqWLl36u/bfuHFjPf/88xowYIAuuOACdenSRcnJydqyZYvmzJmjzp076/nnn5ck3XPPPVqwYIFee+01zZs3Tx06dFBCQoK2bt2qH374QQsXLtQbb7zxuy5Q/ltkZmbqjTfe0KeffqqmTZuqU6dO2rVrlyZPnqwrr7xSH374YcD2Xq9X7777rjp16qS2bduqffv2aty4sTwej9atW6cvv/xSVatW9X8w5sknn9Ts2bN1//33q3PnzpKOvH/45ZdfVo8ePdS7d29NnTq1TM4VOC3K7fPNwGl0vMvOeL1eS01Ntb59+x73UhHLli2zm266yapVq2YVKlSw5ORky8rKCrikyLvvvmuS7A9/+EPANQXNjlyvrk2bNibJpk2b5l8uydq2bWsbNmywW2+91X8Zm9atW9tnn31WZBzHuzC12ZGLNLdt29aioqLM6/Va48aN7dlnn7WDBw8W2XblypV29dVXW6VKlczj8Rx3n8V59dVXrWXLlhYREWERERHWsmXL416S5FReh/B4fvjhB+vTp48lJydbaGioVa5c2Ro3bmwDBgwIuI5fSS63c7zLzhSaM2eOderUySpVqmShoaFWr149e+yxx+zXX38tsm3h3Ban8LIzx14U2ez/r503fvz4IuuKm3+fz2djx461Cy64wMLCwiw+Pt769Olj27Zt819A/WT7KMmxZ86caddcc41VqVLFQkNDrVatWta1a1ebN29ekW3feust69Chg1WuXNkqVKhgNWvWtMsvv9yeffbZYi/Dc6yTXXamuPk53nnt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M1Ovvvqq7rjjDjVv3lwXXHCBJOnXX3/VZZddphUrVqh3795q1qyZduzYoalTp2rjxo2qVq2afD6frrvuOs2dO1d33323GjZsqOXLl+u5557TqlWr9P7775dq7koyvi1btqhdu3Y6dOiQhg4dqsjISI0bN67YZ1snTpyozMxMdezYUaNGjVJeXp7GjBmjSy+9VEuWLFHt2rXVvn179evXTyNHjlSXLl3UrFkz/fLLL+rfv786dOige++9t1TnAuAMYgDOWePHjzdJ9vnnn9v27dttw4YN9uabb1rVqlUtPDzcNm7caGvXrrXg4GB74oknAm67fPlyCwkJCVjetm1bk2Rjx44tcqzMzEyLjIwMWPbtt9+aJLvzzjsDlj/00EMmyWbMmOFflpycbJLs008/Ddh25syZJskaNWpkBw4c8C/PyMgwj8djnTp1Cti+devWlpycHLAsLy+vyHg7duxoderUCVhWOIY5c+b4l23bts28Xq8NGjTIv+zxxx83Sfbee+8V2a/P5zMzs4kTJ1pQUJB9+eWXAevHjh1rkmzevHlFbnu04u7Pko5v4MCBJskWLlwYsF1MTIxJsjVr1piZ2d69e61SpUp21113BRxny5YtFhMTE7B83759dt5559kFF1xg+fn51rlzZ4uOjrZ169ad8DwAnB14yRhwQIcOHRQbG6vExER169ZNFStW1JQpU1SzZk2999578vl8uuWWW7Rjxw7/V3x8vOrWrauZM2cG7Mvr9apXr14lOu7HH38sSXrwwQcDlg8aNEiS9NFHHwUsT0lJUceOHYvdV8+ePVWhQgX/961atZKZqXfv3gHbtWrVShs2bNChQ4f8y45+ZiwnJ0c7duxQ27Zt9fPPPysnJyfg9ueff74uu+wy//exsbGqX7++fv75Z/+yf//730pLS9MNN9xQZJwej0eS9M4776hhw4Zq0KBBwP1a+HL9sfdrSZVkfB9//LEuvvhiXXTRRQHbde/ePWBf06dP1549e5SRkREwxuDgYLVq1SpgjBEREZowYYJWrFihNm3a6KOPPtJzzz2npKSkUp0HgDMLLxkDDnj55ZdVr149hYSEKC4uTvXr11dQ0JF/D/74448yM9WtW7fY2x4dYZJUs2bNEn9wZN26dQoKCtJ5550XsDw+Pl6VKlXSunXrApanpKQcd1/HhkdMTIwkKTExschyn8+nnJwc/0vi8+bNU3Z2tubPn6+8vLyA7XNycvz7Ku44klS5cmXt3r3b//1PP/2krl27Hnes0pH7dcWKFYqNjS12/bZt2054++MpyfjWrVunVq1aFdnu6JfgC8co/f97So8VHR0d8H16err69u2rl19+WR07diwS4wDOXgQh4ICLLrrI/ynjY/l8Pnk8Hn3yyScKDg4usv7Ya+GV5lO/hc+ancyJ9l3c2E603MwkHYm3K664Qg0aNNDo0aOVmJio0NBQffzxx3ruueeKfNDiZPsrKZ/Pp8aNG2v06NHFrj82ZEvqVI1Pkv/cJ06cqPj4+CLrQ0ICf0QUFBRo1qxZko7cr4WfMAdw9iMIAcelpqbKzJSSkqJ69eqd0n0nJyfL5/Ppxx9/VMOGDf3Lt27dqj179ig5OfmUHq8406ZNU0FBgaZOnRrw7FppX7KVjtxn33333Um3Wbp0qa644ooSB/Gpkpyc7H/272grV64M+D41NVWSVL16dXXo0OGk+83OztaKFSv0zDPP6OGHH9bQoUP1wgsvnJpBAyhXvIcQcNyNN96o4OBgjRgxosizTGamnTt3lnrfV199tSTp+eefD1he+KxZ586dS73vkip8Ru3oc8vJydH48eNLvc+uXbtq6dKlRT4lffRxbrnlFm3atEmvvPJKkW3279+vffv2lfr4J3P11VdrwYIFWrRokX/Z9u3bNWnSpIDtOnbsqOjoaD355JM6ePBgkf1s377d//8LFy7UM888o4EDB2rQoEEaPHiwXnrpJc2ePfu0nQeAssMzhIDjUlNT9Ze//EWPPPKI1q5dqy5duigqKkpr1qzRlClTdPfdd+uhhx4q1b7T0tKUmZmpcePGac+ePWrbtq0WLVqk1157TV26dFG7du1O8dkUdeWVVyo0NFTXXnut7rnnHv3666965ZVXVL16df3yyy+l2ufgwYP17rvv6uabb1bv3r3VvHlz7dq1S1OnTtXYsWOVlpamHj166O2339a9996rmTNnKj09XYcPH9YPP/ygt99+23+9xdNhyJAhmjhxoq666iplZWX5LzuTnJysZcuW+beLjo7WmDFj1KNHDzVr1kzdunVTbGys1q9fr48++kjp6el66aWXlJ+fr8zMTNWtW1dPPPGEJGnEiBGaNm2aevXqpeXLlysyMvK0nAuAskEQAtDQoUNVr149PffccxoxYoSkI+9xu/LKK3Xdddf9rn3/4x//UJ06dTRhwgRNmTJF8fHxeuSRR5SdnX0qhn5S9evX17vvvqs//vGPeuihhxQfH6++ffsqNja21B+KqFixor788ktlZ2drypQpeu2111S9enVdccUVqlWrliQpKChI77//vp577jm9/vrrmjJliiIiIlSnTh1lZWWd8pfnj1ajRg3NnDlT/fv311NPPaWqVavq3nvvVUJCgvr06ROw7W233aaEhAQ99dRTevrpp1VQUKCaNWvqsssu83+afNiwYVq9erX+85//KCwsTJIUGhqq1157TRdffLEGDx6sv/3tb6ftfACcfh4rzTuRAQAAcM7gPYQAAACOIwgBAAAcRxACAAA4jiAEAABwHEEIAADgOIIQAADAcQQhAACA4whCAAAAxxGEAAAAjiMIAQAAHEcQAgAAOI4gBAAAcNz/Alw4mapirDMtAAAAAElFTkSuQmCC\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data = df\n",
        "for col in data.select_dtypes(include=['number']).columns:\n",
        "\n",
        "    Q1 = data[col].quantile(0.25)\n",
        "    Q3 = data[col].quantile(0.75)\n",
        "\n",
        "    # Calculate IQR\n",
        "    IQR = Q3 - Q1\n",
        "    # Define the lower and upper bounds for outlier detection\n",
        "    lower_bound = Q1 - 1.5 * IQR\n",
        "    upper_bound = Q3 + 1.5 * IQR\n",
        "\n",
        "    outliers = data[(data[col] < lower_bound) | (data[col] > upper_bound)]\n",
        "\n",
        "    # Print outliers for the current column\n",
        "    print(f\"Outliers in column: {col}\")\n",
        "    print(outliers)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "rLXoeeKnTeYX",
        "outputId": "e5713077-b8d7-41f5-c827-57d8c816edd3"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Outliers in column: Hours Studied\n",
            "Empty DataFrame\n",
            "Columns: [Hours Studied, Previous Scores, Extracurricular Activities, Sleep Hours, Sample Question Papers Practiced, Performance Index]\n",
            "Index: []\n",
            "Outliers in column: Previous Scores\n",
            "Empty DataFrame\n",
            "Columns: [Hours Studied, Previous Scores, Extracurricular Activities, Sleep Hours, Sample Question Papers Practiced, Performance Index]\n",
            "Index: []\n",
            "Outliers in column: Sleep Hours\n",
            "Empty DataFrame\n",
            "Columns: [Hours Studied, Previous Scores, Extracurricular Activities, Sleep Hours, Sample Question Papers Practiced, Performance Index]\n",
            "Index: []\n",
            "Outliers in column: Sample Question Papers Practiced\n",
            "Empty DataFrame\n",
            "Columns: [Hours Studied, Previous Scores, Extracurricular Activities, Sleep Hours, Sample Question Papers Practiced, Performance Index]\n",
            "Index: []\n",
            "Outliers in column: Performance Index\n",
            "Empty DataFrame\n",
            "Columns: [Hours Studied, Previous Scores, Extracurricular Activities, Sleep Hours, Sample Question Papers Practiced, Performance Index]\n",
            "Index: []\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "No outliers in this dataset"
      ],
      "metadata": {
        "id": "prSs5esrVnXH"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "numerical_cols =df.select_dtypes(include=['number']).columns"
      ],
      "metadata": {
        "id": "LXog3CdIVyWo"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Scaling"
      ],
      "metadata": {
        "id": "BIb2w6wlXL2-"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#Checking for linearity\n",
        "df_numerical = df[numerical_cols]\n",
        "\n",
        "corr = df_numerical.corr()\n",
        "plt.figure(figsize=(8, 6))\n",
        "sns.heatmap(corr, annot=True, fmt=\".2f\", cmap=\"icefire\", linewidths=0.5)"
      ],
      "metadata": {
        "id": "D1aTzFmvXP0X",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 769
        },
        "outputId": "effff6f0-9857-4f95-e8aa-69430b52d0fa"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Axes: >"
            ]
          },
          "metadata": {},
          "execution_count": 32
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x600 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "df_numerical = df[numerical_cols]\n",
        "\n",
        "# Initialize the StandardScaler\n",
        "scaler = StandardScaler()\n",
        "\n",
        "# Apply Z-Score scaling (standardization)\n",
        "scaled_df = scaler.fit_transform(df_numerical)\n",
        "\n",
        "# Convert the scaled data back into a DataFrame\n",
        "scaled_df = pd.DataFrame(scaled_df, columns=df_numerical.columns)\n",
        "\n",
        "# Show the scaled dataset\n",
        "print(df.head())"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "dmupvf6xcWUb",
        "outputId": "208de0cc-6cab-45bb-8445-84844efd9996"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "   Hours Studied  Previous Scores Extracurricular Activities  Sleep Hours  \\\n",
            "0       0.775188         1.704176                        Yes     1.456205   \n",
            "1      -0.383481         0.723913                         No    -1.492294   \n",
            "2       1.161410        -1.063626                        Yes     0.276805   \n",
            "3       0.002742        -1.005963                        Yes    -0.902594   \n",
            "4       0.775188         0.320275                         No     0.866505   \n",
            "\n",
            "   Sample Question Papers Practiced  Performance Index  \n",
            "0                         -1.249754           1.862167  \n",
            "1                         -0.900982           0.508818  \n",
            "2                         -0.900982          -0.532220  \n",
            "3                         -0.900982          -1.000687  \n",
            "4                          0.145333           0.560870  \n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Encoding"
      ],
      "metadata": {
        "id": "AQ4rSXbres_X"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Use Encoding on 'Extracurricular Activities'\n",
        "# Initialize the Encoder\n",
        "label_encoder = LabelEncoder()\n",
        "df['Extracurricular Activities'] = label_encoder.fit_transform(df['Extracurricular Activities'])\n",
        "print(df.head())"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "JioaVAEgeyGx",
        "outputId": "53c872d9-e382-45b3-d461-b1fdd1b97861"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "   Hours Studied  Previous Scores  Extracurricular Activities  Sleep Hours  \\\n",
            "0       0.775188         1.704176                           1     1.456205   \n",
            "1      -0.383481         0.723913                           0    -1.492294   \n",
            "2       1.161410        -1.063626                           1     0.276805   \n",
            "3       0.002742        -1.005963                           1    -0.902594   \n",
            "4       0.775188         0.320275                           0     0.866505   \n",
            "\n",
            "   Sample Question Papers Practiced  Performance Index  \n",
            "0                         -1.249754           1.862167  \n",
            "1                         -0.900982           0.508818  \n",
            "2                         -0.900982          -0.532220  \n",
            "3                         -0.900982          -1.000687  \n",
            "4                          0.145333           0.560870  \n"
          ]
        }
      ]
    }
  ]
}